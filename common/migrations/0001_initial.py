# Generated by Django 3.2.11 on 2022-02-11 02:17

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Att',
            fields=[
                ('attid', models.CharField(db_column='AttID', max_length=255, primary_key=True, serialize=False)),
                ('typeid', models.IntegerField(blank=True, db_column='TypeID', null=True)),
                ('parentid', models.IntegerField(blank=True, db_column='ParentID', null=True)),
                ('fileurl', models.CharField(blank=True, db_column='FileUrl', max_length=255, null=True)),
                ('ext', models.CharField(blank=True, db_column='Ext', max_length=255, null=True)),
                ('userid', models.IntegerField(blank=True, db_column='UserID', null=True)),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=255, null=True)),
                ('des', models.CharField(blank=True, db_column='Des', max_length=255, null=True)),
                ('tag', models.CharField(blank=True, db_column='Tag', max_length=255, null=True)),
                ('size', models.IntegerField(blank=True, db_column='Size', null=True)),
            ],
            options={
                'db_table': 'att',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
                ('corporate_name', models.CharField(max_length=254)),
                ('corporate_code', models.CharField(max_length=254)),
                ('corporate_charge', models.CharField(max_length=254)),
                ('corporate_contacts', models.CharField(max_length=254)),
                ('corporate_phone', models.CharField(max_length=254)),
                ('corporate_tel', models.CharField(max_length=254)),
                ('corporate_start_date', models.CharField(max_length=254)),
                ('corporate_end_date', models.CharField(max_length=254)),
                ('corporate_address', models.CharField(max_length=254)),
                ('corporate_range', models.CharField(max_length=254)),
                ('corporate_capital', models.CharField(max_length=254)),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('calendarid', models.CharField(db_column='CalendarID', max_length=255, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=255, null=True)),
                ('type', models.IntegerField(blank=True, db_column='Type', null=True)),
                ('parentid', models.CharField(blank=True, db_column='ParentID', max_length=255, null=True)),
                ('addtime', models.DateTimeField(blank=True, db_column='AddTime', null=True)),
                ('starttime', models.DateTimeField(blank=True, db_column='StartTime', null=True)),
                ('endtime', models.DateTimeField(blank=True, db_column='EndTime', null=True)),
                ('describe', models.TextField(blank=True, db_column='Describe', null=True)),
                ('touser', models.CharField(blank=True, db_column='ToUser', max_length=255, null=True)),
                ('shareto', models.CharField(blank=True, db_column='ShareTo', max_length=255, null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=255, null=True)),
                ('reply', models.TextField(blank=True, db_column='Reply', null=True)),
                ('userid', models.IntegerField(blank=True, db_column='UserID', null=True)),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=255, null=True)),
                ('update', models.DateTimeField(blank=True, db_column='Update', null=True)),
                ('deptid', models.IntegerField(blank=True, db_column='DeptID', null=True)),
            ],
            options={
                'db_table': 'calendar',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Calendarreply',
            fields=[
                ('calendarreplyid', models.CharField(db_column='CalendarReplyID', max_length=255, primary_key=True, serialize=False)),
                ('calendarid', models.CharField(db_column='CalendarID', max_length=255)),
                ('addtime', models.DateTimeField(blank=True, db_column='AddTime', null=True)),
                ('userid', models.IntegerField(blank=True, db_column='UserID', null=True)),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=255, null=True)),
                ('describe', models.TextField(blank=True, db_column='Describe', null=True)),
            ],
            options={
                'db_table': 'calendarreply',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Concurrentpost',
            fields=[
                ('concurrentpostid', models.CharField(db_column='ConcurrentPostID', max_length=255, primary_key=True, serialize=False)),
                ('postid', models.IntegerField(blank=True, db_column='PostID', null=True)),
                ('postname', models.CharField(blank=True, db_column='PostName', max_length=255, null=True)),
                ('deptid', models.IntegerField(blank=True, db_column='DeptID', null=True)),
                ('deptname', models.CharField(blank=True, db_column='DeptName', max_length=255, null=True)),
                ('positionid', models.IntegerField(blank=True, db_column='PositionID', null=True)),
                ('positionname', models.CharField(blank=True, db_column='PositionName', max_length=255, null=True)),
                ('userid', models.IntegerField(blank=True, db_column='UserID', null=True)),
            ],
            options={
                'db_table': 'concurrentpost',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contacts',
            fields=[
                ('contactsid', models.CharField(db_column='ContactsID', max_length=100, primary_key=True, serialize=False)),
                ('customername', models.CharField(blank=True, db_column='CustomerName', max_length=255, null=True)),
                ('customerid', models.CharField(blank=True, db_column='CustomerID', max_length=100, null=True)),
                ('contactsname', models.CharField(blank=True, db_column='ContactsName', max_length=255, null=True)),
                ('qq', models.CharField(blank=True, db_column='QQ', max_length=255, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=255, null=True)),
                ('tel', models.CharField(blank=True, db_column='Tel', max_length=255, null=True)),
            ],
            options={
                'db_table': 'contacts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customerid', models.CharField(db_column='CustomerID', max_length=255, primary_key=True, serialize=False)),
                ('customername', models.CharField(blank=True, db_column='CustomerName', max_length=255, null=True)),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=255, null=True)),
                ('userid', models.IntegerField(blank=True, db_column='UserID', null=True)),
                ('addtime', models.DateTimeField(blank=True, db_column='AddTime', null=True)),
                ('degree', models.CharField(blank=True, db_column='Degree', max_length=255, null=True)),
                ('followuptime', models.DateTimeField(blank=True, db_column='FollowUpTime', null=True)),
                ('followupnumber', models.IntegerField(blank=True, db_column='FollowUpNumber', null=True)),
                ('followupcontent', models.TextField(blank=True, db_column='FollowUpContent', null=True)),
                ('sharetime', models.DateTimeField(blank=True, db_column='ShareTime', null=True)),
                ('lastfollowup', models.CharField(blank=True, db_column='LastFollowUp', max_length=255, null=True)),
                ('customertype', models.CharField(blank=True, db_column='CustomerType', max_length=255, null=True)),
                ('customertypeid', models.CharField(blank=True, db_column='CustomerTypeID', max_length=255, null=True)),
                ('sharetrue', models.IntegerField(blank=True, db_column='ShareTrue', null=True)),
                ('state', models.IntegerField(blank=True, db_column='State', null=True)),
            ],
            options={
                'db_table': 'customer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customershare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customershareid', models.CharField(db_column='CustomerShareID', max_length=100)),
                ('customername', models.CharField(blank=True, db_column='CustomerName', max_length=255, null=True)),
                ('customerid', models.CharField(blank=True, db_column='CustomerID', max_length=100, null=True)),
                ('shareuser', models.CharField(blank=True, db_column='ShareUser', max_length=255, null=True)),
                ('datetime', models.DateTimeField(blank=True, db_column='DateTime', null=True)),
                ('operation', models.CharField(blank=True, db_column='Operation', max_length=255, null=True)),
                ('operator', models.CharField(db_column='Operator', max_length=255)),
            ],
            options={
                'db_table': 'customershare',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Deptment',
            fields=[
                ('deptid', models.AutoField(db_column='DeptID', primary_key=True, serialize=False)),
                ('deptname', models.CharField(blank=True, db_column='DeptName', max_length=255, null=True)),
                ('describe', models.CharField(blank=True, db_column='Describe', max_length=255, null=True)),
                ('parentid', models.IntegerField(blank=True, db_column='ParentID', null=True)),
                ('od', models.IntegerField(blank=True, db_column='OD', null=True)),
                ('master', models.CharField(blank=True, db_column='Master', max_length=255, null=True)),
            ],
            options={
                'db_table': 'deptment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('menuid', models.AutoField(db_column='MenuID', primary_key=True, serialize=False)),
                ('menuname', models.CharField(blank=True, db_column='MenuName', max_length=45, null=True)),
                ('menupath', models.CharField(blank=True, db_column='MenuPath', max_length=200, null=True)),
                ('od', models.IntegerField(blank=True, db_column='OD', null=True)),
                ('parentid', models.IntegerField(blank=True, db_column='ParentID', null=True)),
                ('img', models.CharField(blank=True, db_column='Img', max_length=255, null=True)),
                ('ioc', models.CharField(blank=True, db_column='Ioc', max_length=255, null=True)),
            ],
            options={
                'db_table': 'menu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('positionid', models.AutoField(db_column='PositionID', primary_key=True, serialize=False)),
                ('positionname', models.CharField(blank=True, db_column='PositionName', max_length=255, null=True)),
                ('deptid', models.IntegerField(blank=True, db_column='DeptID', null=True)),
                ('deptname', models.CharField(blank=True, db_column='DeptName', max_length=255, null=True)),
                ('describe', models.CharField(blank=True, db_column='Describe', max_length=255, null=True)),
                ('menuid', models.IntegerField(blank=True, db_column='MenuID', null=True)),
                ('od', models.IntegerField(blank=True, db_column='OD', null=True)),
            ],
            options={
                'db_table': 'position',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Positionmenuinfo',
            fields=[
                ('positionid', models.AutoField(db_column='PositionID', primary_key=True, serialize=False)),
                ('menuid', models.IntegerField(db_column='MenuID')),
            ],
            options={
                'db_table': 'positionmenuinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('postid', models.AutoField(db_column='PostID', primary_key=True, serialize=False)),
                ('postname', models.CharField(blank=True, db_column='PostName', max_length=255, null=True)),
                ('describe', models.TextField(blank=True, db_column='Describe', null=True)),
                ('od', models.IntegerField(blank=True, db_column='OD', null=True)),
            ],
            options={
                'db_table': 'post',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('projectid', models.AutoField(db_column='ProjectID', primary_key=True, serialize=False)),
                ('projectnumber', models.CharField(blank=True, db_column='ProjectNumber', max_length=100, null=True)),
                ('projectname', models.CharField(blank=True, db_column='ProjectName', max_length=255, null=True)),
                ('starttime', models.DateTimeField(blank=True, db_column='StartTime', null=True)),
                ('endtime', models.DateTimeField(blank=True, db_column='EndTime', null=True)),
                ('plannedhours', models.IntegerField(blank=True, db_column='PlannedHours', null=True)),
                ('actualhours', models.IntegerField(blank=True, db_column='ActualHours', null=True)),
                ('typeid', models.IntegerField(blank=True, db_column='TypeID', null=True)),
                ('typename', models.CharField(blank=True, db_column='TypeName', max_length=255, null=True)),
                ('approved', models.CharField(blank=True, db_column='Approved', max_length=255, null=True)),
                ('founder', models.CharField(blank=True, db_column='Founder', max_length=255, null=True)),
                ('classifyid', models.IntegerField(blank=True, db_column='ClassifyID', null=True)),
                ('classifyname', models.CharField(blank=True, db_column='ClassifyName', max_length=255, null=True)),
                ('viewer', models.CharField(blank=True, db_column='Viewer', max_length=255, null=True)),
                ('describe', models.CharField(blank=True, db_column='Describe', max_length=255, null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=255, null=True)),
            ],
            options={
                'db_table': 'project',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Returnvisit',
            fields=[
                ('returnvisitid', models.CharField(db_column='ReturnVisitID', max_length=100, primary_key=True, serialize=False)),
                ('customername', models.CharField(blank=True, db_column='CustomerName', max_length=255, null=True)),
                ('customerid', models.CharField(blank=True, db_column='CustomerID', max_length=100, null=True)),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=255, null=True)),
                ('userid', models.IntegerField(blank=True, db_column='UserID', null=True)),
                ('followupmode', models.CharField(blank=True, db_column='FollowUpMode', max_length=255, null=True)),
                ('followuptime', models.DateTimeField(blank=True, db_column='FollowUpTime', null=True)),
                ('followupcontent', models.TextField(blank=True, db_column='FollowUpContent', null=True)),
                ('followupnexttime', models.DateTimeField(blank=True, db_column='FollowUpNextTime', null=True)),
                ('remind', models.IntegerField(blank=True, db_column='Remind', null=True)),
            ],
            options={
                'db_table': 'returnvisit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('roleid', models.AutoField(db_column='RoleID', primary_key=True, serialize=False)),
                ('rolename', models.CharField(blank=True, db_column='RoleName', max_length=45, null=True)),
            ],
            options={
                'db_table': 'role',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Seal',
            fields=[
                ('sealid', models.AutoField(db_column='SealID', primary_key=True, serialize=False)),
                ('userid', models.IntegerField(blank=True, db_column='UserID', null=True)),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=255, null=True)),
                ('sealname', models.CharField(blank=True, db_column='SealName', max_length=255, null=True)),
                ('passtrue', models.IntegerField(blank=True, db_column='PassTrue', null=True)),
                ('sealurl', models.CharField(blank=True, db_column='SealUrl', max_length=255, null=True)),
            ],
            options={
                'db_table': 'seal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Syslog',
            fields=[
                ('syslogid', models.AutoField(db_column='SysLogID', primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=255, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=255, null=True)),
                ('account', models.CharField(blank=True, db_column='Account', max_length=255, null=True)),
                ('operationtime', models.DateTimeField(blank=True, db_column='OperationTime', null=True)),
                ('source', models.CharField(blank=True, db_column='Source', max_length=255, null=True)),
                ('ip', models.CharField(blank=True, db_column='IP', max_length=255, null=True)),
                ('content', models.TextField(blank=True, db_column='Content', null=True)),
            ],
            options={
                'db_table': 'syslog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('taskid', models.AutoField(db_column='TaskID', primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=255, null=True)),
                ('serialnumber', models.CharField(blank=True, db_column='SerialNumber', max_length=255, null=True)),
                ('tasktitle', models.CharField(blank=True, db_column='TaskTitle', max_length=255, null=True)),
                ('prepositionid', models.IntegerField(blank=True, db_column='PrepositionID', null=True)),
                ('preposition', models.CharField(blank=True, db_column='Preposition', max_length=255, null=True)),
                ('executor', models.CharField(blank=True, db_column='Executor', max_length=255, null=True)),
                ('starttime', models.DateTimeField(blank=True, db_column='StartTime', null=True)),
                ('endtime', models.DateTimeField(blank=True, db_column='EndTime', null=True)),
                ('level', models.CharField(blank=True, db_column='Level', max_length=255, null=True)),
                ('milepost', models.IntegerField(blank=True, db_column='Milepost', null=True)),
                ('describe', models.TextField(blank=True, db_column='Describe', null=True)),
                ('rapexplain', models.TextField(blank=True, db_column='RAPExplain', null=True)),
                ('plannedhours', models.IntegerField(blank=True, db_column='PlannedHours', null=True)),
                ('actualhours', models.IntegerField(blank=True, db_column='ActualHours', null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=255, null=True)),
            ],
            options={
                'db_table': 'task',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('trackid', models.CharField(db_column='TrackID', max_length=100, primary_key=True, serialize=False)),
                ('customername', models.CharField(blank=True, db_column='CustomerName', max_length=255, null=True)),
                ('customerid', models.CharField(blank=True, db_column='CustomerID', max_length=100, null=True)),
                ('customertype', models.CharField(blank=True, db_column='CustomerType', max_length=255, null=True)),
                ('customertypeid', models.CharField(blank=True, db_column='CustomerTypeID', max_length=100, null=True)),
                ('degree', models.CharField(blank=True, db_column='Degree', max_length=100, null=True)),
                ('contactsname', models.CharField(blank=True, db_column='ContactsName', max_length=255, null=True)),
                ('followupmode', models.CharField(blank=True, db_column='FollowUpMode', max_length=255, null=True)),
                ('followuptime', models.DateTimeField(blank=True, db_column='FollowUpTime', null=True)),
                ('followupcontent', models.TextField(blank=True, db_column='FollowUpContent', null=True)),
                ('followupresult', models.TextField(blank=True, db_column='FollowUpResult', null=True)),
                ('followupnexttime', models.DateTimeField(blank=True, db_column='FollowUpNextTime', null=True)),
                ('remind', models.IntegerField(blank=True, db_column='Remind', null=True)),
                ('cycleremind', models.IntegerField(blank=True, db_column='CycleRemind', null=True)),
            ],
            options={
                'db_table': 'track',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Useraccount',
            fields=[
                ('accountid', models.AutoField(db_column='AccountID', primary_key=True, serialize=False)),
                ('userid', models.IntegerField(blank=True, db_column='UserID', null=True)),
                ('account', models.CharField(blank=True, db_column='Account', max_length=255, null=True)),
                ('password', models.CharField(blank=True, db_column='PassWord', max_length=255, null=True)),
            ],
            options={
                'db_table': 'useraccount',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userinfo',
            fields=[
                ('dduserid', models.CharField(blank=True, db_column='DDUserid', max_length=100, null=True)),
                ('userid', models.AutoField(db_column='UserID', primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=100, null=True)),
                ('deptid', models.IntegerField(blank=True, db_column='DeptID', null=True)),
                ('deptname', models.CharField(blank=True, db_column='DeptName', max_length=45, null=True)),
                ('tel', models.CharField(blank=True, db_column='Tel', max_length=45, null=True)),
                ('postid', models.IntegerField(blank=True, db_column='PostID', null=True)),
                ('postname', models.CharField(blank=True, db_column='PostName', max_length=45, null=True)),
                ('positionid', models.IntegerField(blank=True, db_column='PositionID', null=True)),
                ('positionname', models.CharField(blank=True, db_column='PositionName', max_length=45, null=True)),
                ('gender', models.CharField(blank=True, db_column='Gender', max_length=45, null=True)),
                ('state', models.IntegerField(blank=True, db_column='State', null=True)),
                ('birthday', models.CharField(blank=True, db_column='Birthday', max_length=255, null=True)),
                ('officetelephone', models.CharField(blank=True, db_column='OfficeTelephone', max_length=255, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=255, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=255, null=True)),
                ('idnumber', models.CharField(blank=True, db_column='IDNumber', max_length=255, null=True)),
                ('concurrentpost', models.IntegerField(blank=True, db_column='ConcurrentPost', null=True)),
            ],
            options={
                'db_table': 'userinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usermenu',
            fields=[
                ('usermenuid', models.AutoField(db_column='UserMenuID', primary_key=True, serialize=False)),
                ('enable', models.IntegerField(blank=True, db_column='Enable', null=True)),
                ('menus', models.TextField(blank=True, db_column='Menus', null=True)),
                ('userid', models.IntegerField(blank=True, db_column='UserID', null=True)),
            ],
            options={
                'db_table': 'usermenu',
                'managed': False,
            },
        ),
    ]
